@using DataAccess.Models
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column m-2">
    <li class="nav-item mb-3"><a class="nav-link  @ManageNavPages.IndexNavClass(ViewContext)" id="profile" style="color: white; background-color: orangered" asp-page="./Index">Profile</a></li>
    <li class="nav-item mb-3"><a class="nav-link  @ManageNavPages.EmailNavClass(ViewContext)" id="email" style="color: white; background-color: orangered" asp-page="./Email">Email</a></li>
    <li class="nav-item mb-3"><a class="nav-link  @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" style="color: white; background-color: orangered" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins mb-3" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" style="color: white; background-color: orangered" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item mb-3 mt-3"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" style="color: white; background-color: orangered" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item mb-3"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" style="color: white; background-color: orangered" asp-page="./PersonalData">Personal data</a></li>
    <li class="nav-item mb-3"><a class="nav-link @ManageNavPages.OrdersNavClass(ViewContext)" id="orders" style="color: white; background-color: orangered" asp-page="./Orders">Orders</a></li>


</ul>
